/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, {Component} from 'react';
import {StyleSheet, Text, View, Button, ScrollView} from 'react-native';

import RNTangemSdk from 'tangem-sdk-react-native';

export default class App extends Component<{}> {
  state = {
    card: undefined,
    log: '',
    status: {
      enabled: false,
      support: false,
    },
  };

  componentDidMount() {
    // start the session
    RNTangemSdk.startSession();

    // on nfc state change (Android)
    RNTangemSdk.on('NFCStateChange', ({enabled}) => {
      this.setState({
        status: {
          enabled,
          support: true,
        },
      });
    });

    // get currnet nfc status
    RNTangemSdk.getNFCStatus().then((status) => {
      this.setState({
        status,
      });
    });
  }

  componentWillUnmount() {
    // stop the session
    RNTangemSdk.stopSession();
  }

  onSuccess = (r) => {
    this.setState({
      log: JSON.stringify(r, null, '\t'),
    });
  };

  onError = (e) => {
    this.setState({
      log: e.toString(),
    });
  };

  scanCard = () => {
    RNTangemSdk.scanCard({
      onlineVerification: false,
    })
      .then(this.onSuccess)
      .catch(this.onError);
  };

  createWallet = () => {
    RNTangemSdk.createWallet().then(this.onSuccess).catch(this.onError);
  };

  purgeWallet = () => {
    RNTangemSdk.purgeWallet().then(this.onSuccess).catch(this.onError);
  };

  changePin1 = () => {
    // for reset the pinCode set it to '000000'
    // const pin1 = '111';
    RNTangemSdk.changePin1().then(this.onSuccess).catch(this.onError);
  };

  changePin2 = () => {
    // for reset the pinCode set it to '000'
    // const pin2 = '000';
    RNTangemSdk.changePin2().then(this.onSuccess).catch(this.onError);
  };

  sign = () => {
    const hashes = [
      '44617461207573656420666f722068617368696e67',
      '4461746120666f7220757365642068617368696e67',
    ];

    RNTangemSdk.sign(hashes).then(this.onSuccess).catch(this.onError);
  };

  render() {
    const {log, status} = this.state;
    return (
      <View style={styles.container}>
        <View style={styles.content}>
          <Text style={styles.title}>☆RNTangemSdk example☆</Text>

          <Text>
            NFC Supported: {status.support.toString()} | NFC Enabled:{' '}
            {status.enabled.toString()}
          </Text>
          <View style={styles.row}>
            <Button
              style={styles.button}
              onPress={this.scanCard}
              title="scanCard"
            />
            <Button style={styles.button} onPress={this.sign} title="sign" />
          </View>
          <View style={styles.row}>
            <Button onPress={this.createWallet} title="createWallet" />
            <Button onPress={this.purgeWallet} title="purgeWallet" />
          </View>
          <View style={styles.row}>
            <Button onPress={this.changePin1} title="setPin1" />
            <Button onPress={this.changePin2} title="setPin2" />
          </View>
        </View>

        <ScrollView style={styles.flex1}>
          <Text>{log}</Text>
        </ScrollView>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  flex1: {
    flex: 1,
  },
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  title: {
    fontWeight: 'bold',
    fontSize: 20,
    textAlign: 'center',
    paddingBottom: 30,
  },
  row: {
    flexDirection: 'row',
    justifyContent: 'center',
    padding: 10,
  },
  content: {
    flex: 1,
    justifyContent: 'center',
  },
  button: {
    marginHorizontal: 5,
  },
});
